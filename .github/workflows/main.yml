name: 'publish'

# This will trigger the action on each push to the `release` branch.
on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]

    #runs-on: ${{ matrix.platform }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'


      # Download Cache File Webview2 for Windows 7
      - name: Set File Name
        id: set-file-name
        run: echo "::set-output name=file-name::Microsoft.WebView2.FixedVersionRuntime.109.0.1518.78.x64.cab"

      - name: Download and Cache File
        id: download
        uses: actions/cache@v2
        with:
          path: ${{ steps.set-file-name.outputs.file-name }}
          key: ${{ runner.os }}-file-${{ hashFiles(steps.set-file-name.outputs.file-name) }}

      - name: Check Cache
        run: |
          if (!(Test-Path ${{ steps.set-file-name.outputs.file-name }})) {
            Write-Host "File not found in cache. Downloading..."
            Invoke-WebRequest -Uri "http://119.23.107.114/Downloads/2023/Microsoft.WebView2.FixedVersionRuntime.109.0.1518.78.x64.cab" -OutFile ${{ steps.set-file-name.outputs.file-name }}
            Write-Host "File Downloaded."
          } else {
            Write-Host "File found in cache."
          }

      - name: Extract File
        run: |
          Expand-Archive -Path "$env:GITHUB_WORKSPACE\${{ steps.set-file-name.outputs.file-name }}" -DestinationPath "$env:GITHUB_WORKSPACE\${{ steps.set-file-name.outputs.file-name }}\"
      ######


      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
    
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
